import{j as e}from"./jsx-runtime-CKrituN3.js";import{A as h}from"./Avatar-6Ac5GfqE.js";import{A as x,a as u}from"./Avatar.styled-C5_DRdmu.js";import{T as y}from"./Tag-DSgcpY25.js";import{T as n}from"./Tooltip-CySBE-ZE.js";import{I as g}from"./InfoOutline-Bzo0hciy.js";import{T as a}from"./Table-DlcpNRZO.js";import"./index-CBqU2yxZ.js";import"./_commonjsHelpers-BosuxZz1.js";import"./emotion-styled.browser.esm-CRzct0lr.js";import"./extends-ChRHEBve.js";import"./emotion-element-43c6fea0.browser.esm-DXL8qHXx.js";import"./Close-CGHfkSk3.js";import"./index-Doi4ik1y.js";import"./emotion-react.browser.esm-DebaLaFy.js";import"./index-BtM5VmRH.js";import"./index-BAMY2Nnw.js";import"./util-BQ0cylCP.js";import"./index-BDlDW0Uq.js";import"./Portal-U_0UEmB3.js";import"./z-index-Bx-k-k_v.js";const i=["Name","Email","Role","Status"],f=[["Thomas Morse","thomas.morse@myhugecompanynamem.com","Operator","yellow"],["Hanna Apple","hanna.apple@companysample.com","Admin","green"],["Marcus Klein","marcus.klein@companysample.com","Operator","green"],["Rick Thor","rick.thor@companysample.com","Admin","grey"]],j={Name:"200px",Status:"120px"},T=r=>e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"8px"},children:[e.jsx(h,{size:x.Small,title:r,type:u.Primary}),r]}),A=r=>e.jsx(y,{border:"rounded",color:r,size:"small",children:{green:"ACTIVE",yellow:"PENDING",grey:"DEACTIVATED"}[r]}),v=(r,s)=>({Name:T(s),Status:A(s),Email:s,Role:s})[i[r]],B={title:"Data Display/Table",component:a,render:({isFixed:r,hasFixedHeader:s})=>e.jsx("div",{style:{...s&&{height:"200px",overflow:"auto"}},children:e.jsxs(a,{isFixed:r,children:[e.jsx(a.Head,{hasFixedHeader:s,children:e.jsx(a.Row,{children:i.map(o=>e.jsx(a.ColumnHeader,{dataTestId:"test",children:e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:4},children:[o,o==="Status"&&e.jsxs(n,{children:[e.jsx(g,{height:16,width:16}),e.jsx(n.Content,{children:"Pending: Yellow | Active: Green | Deactivated: Grey"})]})]})},`column-header-${o}`))})}),e.jsx(a.Body,{children:f.map(o=>e.jsx(a.Row,{children:o.map((l,m)=>e.jsx(a.DataCell,{columnWidth:j[i[m]],children:v(m,l)},`column-${i[m]}-${l}`))},o.toString()))})]})})},t={args:{isFixed:!1,hasFixedHeader:!1}};var p,d,c;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    isFixed: false,
    hasFixedHeader: false
  }
}`,...(c=(d=t.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const K=["Default"];export{t as Default,K as __namedExportsOrder,B as default};
