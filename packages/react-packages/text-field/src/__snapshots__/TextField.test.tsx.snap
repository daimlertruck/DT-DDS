// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> component onBlur event should have error state with error message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #FF494A;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #FF494A;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-8 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-8:focus {
  border-color: #00677F;
}

.emotion-8[data-error="true"] {
  border-color: #FF494A;
}

.emotion-8[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-8[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-8:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-8:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-8:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-8:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-8:disabled::placeholder {
  color: transparent;
}

.emotion-8::-webkit-input-placeholder {
  color: transparent;
}

.emotion-8::-moz-placeholder {
  color: transparent;
}

.emotion-8:-ms-input-placeholder {
  color: transparent;
}

.emotion-8::placeholder {
  color: transparent;
}

.emotion-10 {
  padding-left: 16px;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="Some-text"
    >
      Some text
      <span
        class="emotion-4 emotion-5"
        color="error.default"
        data-testid="typography"
      >
        *
      </span>
    </label>
    <div
      class="emotion-6 emotion-7"
      style="flex-direction: row;"
    >
      <input
        class="emotion-8 emotion-9"
        data-error="true"
        id="Some-text"
        name="Some-text"
        type="text"
        value=""
      />
    </div>
    <div
      class="emotion-10 emotion-11"
    >
      <span
        class="emotion-4 emotion-5"
        color="error.default"
        data-testid="typography"
      >
        This field is required.
      </span>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders disabled input 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #C1C1C1;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-6:focus {
  border-color: #00677F;
}

.emotion-6[data-error="true"] {
  border-color: #FF494A;
}

.emotion-6[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-6[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-6:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::placeholder {
  color: transparent;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      disabled=""
      for="My-disabled-input"
    >
      My disabled input
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="false"
        disabled=""
        id="My-disabled-input"
        name="My-disabled-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with extras suffix and prefix elements 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 label {
  left: 0;
  padding-left: 48px;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  position: absolute;
  left: 12px;
  width: 24px;
  height: 24px;
}

.emotion-6~input {
  padding-left: 48px;
}

.emotion-8 {
  font-family: DTUI-icons-outlined;
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  font-variation-settings: 'FILL' 0;
  color: #454545;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'liga';
}

.emotion-10 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-10:focus {
  border-color: #00677F;
}

.emotion-10[data-error="true"] {
  border-color: #FF494A;
}

.emotion-10[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-10[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-10:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-10:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-10:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-10:disabled::placeholder {
  color: transparent;
}

.emotion-10::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10::-moz-placeholder {
  color: transparent;
}

.emotion-10:-ms-input-placeholder {
  color: transparent;
}

.emotion-10::placeholder {
  color: transparent;
}

.emotion-12 {
  position: absolute;
  right: 12px;
  width: 24px;
  height: 24px;
}

.emotion-12~input {
  padding-right: 48px;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="My-input"
    >
      My input
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <span
        class="emotion-6 emotion-7"
      >
        <i
          class="emotion-8 emotion-9"
          color="#454545"
          data-testid="icon"
        >
          home_work
        </i>
      </span>
      <input
        class="emotion-10 emotion-11"
        data-error="false"
        id="My-input"
        name="My-input"
        type="text"
        value=""
      />
      <span
        class="emotion-12 emotion-13"
      >
        <i
          class="emotion-8 emotion-9"
          color="#454545"
          data-testid="icon"
        >
          home_work
        </i>
      </span>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with variant baseLine 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px 0px 0 0;
  border-style: solid;
  outline: 0;
  border-width: 0 0 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-6:focus {
  border-color: #00677F;
}

.emotion-6[data-error="true"] {
  border-color: #FF494A;
}

.emotion-6[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-6[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-6:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::placeholder {
  color: transparent;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="My-input"
    >
      My input
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="false"
        id="My-input"
        name="My-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input without float label 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #454545;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  cursor: inherit;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 16px;
  width: 100%;
  height: 53px;
}

.emotion-6:focus {
  border-color: #00677F;
}

.emotion-6[data-error="true"] {
  border-color: #FF494A;
}

.emotion-6[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-6[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:disabled::-webkit-input-placeholder {
  color: #C1C1C1;
}

.emotion-6:disabled::-moz-placeholder {
  color: #C1C1C1;
}

.emotion-6:disabled:-ms-input-placeholder {
  color: #C1C1C1;
}

.emotion-6:disabled::placeholder {
  color: #C1C1C1;
}

.emotion-6::-webkit-input-placeholder {
  color: #838383;
}

.emotion-6::-moz-placeholder {
  color: #838383;
}

.emotion-6:-ms-input-placeholder {
  color: #838383;
}

.emotion-6::placeholder {
  color: #838383;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="My-input"
    >
      My input
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="false"
        id="My-input"
        name="My-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with error styles and message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #FF494A;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(-45%);
  -moz-transform: translateY(-45%);
  -ms-transform: translateY(-45%);
  transform: translateY(-45%);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-6:focus {
  border-color: #00677F;
}

.emotion-6[data-error="true"] {
  border-color: #FF494A;
}

.emotion-6[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-6[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-6:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::placeholder {
  color: transparent;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

.emotion-8 {
  padding-left: 16px;
}

.emotion-10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #FF494A;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="My-Input-with-Error-Message"
    >
      My Input with Error Message
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="true"
        id="My-Input-with-Error-Message"
        name="My-Input-with-Error-Message"
        type="text"
        value="Initial Value"
      />
    </div>
    <div
      class="emotion-8 emotion-9"
    >
      <span
        class="emotion-10 emotion-11"
        color="error.default"
        data-testid="typography"
      >
        My Error Message
      </span>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with info message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 16px;
  top: 16.5px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #454545;
  background-color: #FFFFFF;
  border-radius: 0px;
  border-style: solid;
  outline: 0;
  border-width: 1px;
  border-color: #C1C1C1;
  min-width: 198px;
  padding: 24px 16px 8px;
  width: 100%;
  height: 53px;
}

.emotion-6:focus {
  border-color: #00677F;
}

.emotion-6[data-error="true"] {
  border-color: #FF494A;
}

.emotion-6[data-error="true"]:focus {
  border-color: #FF494A;
}

.emotion-6[readonly]:not([disabled]) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:disabled {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:disabled::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::-moz-placeholder {
  color: transparent;
}

.emotion-6:disabled:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:disabled::placeholder {
  color: transparent;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

.emotion-8 {
  padding-left: 16px;
}

.emotion-10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="My-Input-with-info-message"
    >
      My Input with info message
    </label>
    <div
      class="emotion-4 emotion-5"
      style="flex-direction: row;"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="false"
        id="My-Input-with-info-message"
        name="My-Input-with-info-message"
        type="text"
        value=""
      />
    </div>
    <div
      class="emotion-8 emotion-9"
    >
      <span
        class="emotion-10 emotion-11"
        color="content.medium"
        data-testid="typography"
      >
        My Infor Message
      </span>
    </div>
  </div>
</div>
`;
