// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> component renders disabled input 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A3A3A3;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5::-moz-placeholder {
  color: transparent;
}

.emotion-5:-ms-input-placeholder {
  color: transparent;
}

.emotion-5::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      disabled=""
      for="my-disabled-input"
    >
      My disabled input
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="false"
        data-testid="input-field"
        disabled=""
        id="my-disabled-input"
        name="my-disabled-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with extras suffix and prefix elements 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 label {
  left: 0;
  padding-left: 48px;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: default;
}

.emotion-7 {
  font-family: DTUI-icons-outlined;
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  font-variation-settings: 'FILL' 0;
  color: #292929;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'liga';
}

.emotion-8 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-8 input:-webkit-autofill,
.emotion-8 input:-webkit-autofill:hover,
.emotion-8 input:-webkit-autofill:focus,
.emotion-8 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-8::-webkit-input-placeholder {
  color: transparent;
}

.emotion-8::-moz-placeholder {
  color: transparent;
}

.emotion-8:-ms-input-placeholder {
  color: transparent;
}

.emotion-8::placeholder {
  color: transparent;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: default;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input"
    >
      My input
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <div
        class="emotion-5 emotion-6"
        data-testid="extra-preffix"
      >
        <i
          class="emotion-7"
          color="#292929"
          data-testid="icon"
        >
          home_work
        </i>
      </div>
      <input
        class="emotion-8 emotion-9"
        data-error="false"
        data-testid="input-field"
        id="my-input"
        name="my-input"
        type="text"
        value=""
      />
      <div
        class="emotion-10 emotion-11"
        data-testid="extra-suffix"
      >
        <i
          class="emotion-7"
          color="#292929"
          data-testid="icon"
        >
          home_work
        </i>
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with light background fill 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #FAFAFA;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5::-moz-placeholder {
  color: transparent;
}

.emotion-5:-ms-input-placeholder {
  color: transparent;
}

.emotion-5::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input"
    >
      My input
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="false"
        data-testid="input-field"
        id="my-input"
        name="my-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with variant baseLine 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px 0px 0 0;
  border-bottom: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border-bottom: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5::-moz-placeholder {
  color: transparent;
}

.emotion-5:-ms-input-placeholder {
  color: transparent;
}

.emotion-5::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input"
    >
      My input
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="false"
        data-testid="input-field"
        id="my-input"
        name="my-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input without floating label 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #292929;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #292929;
  cursor: inherit;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: #A3A3A3;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: #A3A3A3;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: #A3A3A3;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: #838383;
}

.emotion-5::-moz-placeholder {
  color: #838383;
}

.emotion-5:-ms-input-placeholder {
  color: #838383;
}

.emotion-5::placeholder {
  color: #838383;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input"
    >
      My input
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="false"
        data-testid="input-field"
        id="my-input"
        name="my-input"
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with error styles and message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(-45%);
  -moz-transform: translateY(-45%);
  -ms-transform: translateY(-45%);
  transform: translateY(-45%);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #A00000;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #A00000;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5::-moz-placeholder {
  color: transparent;
}

.emotion-5:-ms-input-placeholder {
  color: transparent;
}

.emotion-5::placeholder {
  color: transparent;
}

.emotion-7 {
  padding-left: 16px;
}

.emotion-9 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input-with-error-message"
    >
      My Input with Error Message
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="true"
        data-testid="input-field"
        id="my-input-with-error-message"
        name="my-input-with-error-message"
        type="text"
        value="Initial Value"
      />
    </div>
    <div
      class="emotion-7 emotion-8"
    >
      <span
        class="emotion-9"
        color="error.default"
        data-testid="typography"
      >
        My Error Message
      </span>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with info message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-3:focus-within,
.emotion-3:hover {
  border: 1px solid #131313;
}

.emotion-3:focus-within:has(input[readonly]:not([disabled])),
.emotion-3:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-3:focus-within:has(input[disabled]),
.emotion-3:hover:has(input[disabled]),
.emotion-3:focus-within:has(input[disabled])>*,
.emotion-3:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-3:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-3:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-3:focus-within:has(input[disabled]) input::placeholder,
.emotion-3:hover:has(input[disabled]) input::placeholder,
.emotion-3:focus-within:has(input[disabled])>* input::placeholder,
.emotion-3:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-5 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-5 input:-webkit-autofill,
.emotion-5 input:-webkit-autofill:hover,
.emotion-5 input:-webkit-autofill:focus,
.emotion-5 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-5::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5::-moz-placeholder {
  color: transparent;
}

.emotion-5:-ms-input-placeholder {
  color: transparent;
}

.emotion-5::placeholder {
  color: transparent;
}

.emotion-7 {
  padding-left: 16px;
}

.emotion-9 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2"
      data-testid="label-field"
      for="my-input-with-info-message"
    >
      My Input with info message
    </label>
    <div
      class="emotion-3 emotion-4"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-5 emotion-6"
        data-error="false"
        data-testid="input-field"
        id="my-input-with-info-message"
        name="my-input-with-info-message"
        type="text"
        value=""
      />
    </div>
    <div
      class="emotion-7 emotion-8"
    >
      <span
        class="emotion-9"
        color="content.medium"
        data-testid="typography"
      >
        My Infor Message
      </span>
    </div>
  </div>
</div>
`;
