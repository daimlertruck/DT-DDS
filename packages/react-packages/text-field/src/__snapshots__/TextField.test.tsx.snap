// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> component renders disabled input 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #a9a9a9;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px;
  border: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #00677f;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #c5c5c5;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-disabled-input-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        disabled=""
        for="my-disabled-input"
        scale="standard"
      >
        My disabled input
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-disabled-input-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="false"
          data-testid="my-disabled-input-text-field-input"
          disabled=""
          id="my-disabled-input"
          name="my-disabled-input"
          scale="standard"
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with extras suffix and prefix elements 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 label {
  left: 0;
  padding-left: 48px;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3e3e3e;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px;
  border: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #00677f;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #c5c5c5;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: default;
  padding-left: 12px;
}

.emotion-9 {
  font-family: DTUI-icons-outlined;
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  font-variation-settings: 'FILL' 0;
  color: #252525;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'liga';
}

.emotion-10 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-10:focus {
  outline: none;
}

.emotion-10:-moz-read-only {
  color: #3e3e3e;
}

.emotion-10:read-only {
  color: #3e3e3e;
}

.emotion-10 input:-webkit-autofill,
.emotion-10 input:-webkit-autofill:hover,
.emotion-10 input:-webkit-autofill:focus,
.emotion-10 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-10[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-10[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-10[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-10[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-10[readonly]::placeholder,
.emotion-10[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-10::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10::-moz-placeholder {
  color: transparent;
}

.emotion-10:-ms-input-placeholder {
  color: transparent;
}

.emotion-10::placeholder {
  color: transparent;
}

.emotion-10:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-10:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-10:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-10:focus::placeholder {
  color: #3e3e3e;
}

.emotion-10:disabled {
  color: #a9a9a9;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: default;
  padding-right: 12px;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input"
        scale="standard"
      >
        My input
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-text-field-wrapper"
      >
        <div
          class="emotion-7 emotion-8"
          data-testid="extra-preffix"
        >
          <i
            class="emotion-9"
            color="#252525"
            data-testid="icon"
          >
            home_work
          </i>
        </div>
        <input
          class="emotion-10 emotion-11"
          data-error="false"
          data-testid="my-input-text-field-input"
          id="my-input"
          name="my-input"
          scale="standard"
          type="text"
          value=""
        />
        <div
          class="emotion-12 emotion-13"
          data-testid="extra-suffix"
        >
          <i
            class="emotion-9"
            color="#252525"
            data-testid="icon"
          >
            home_work
          </i>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with light background fill 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3e3e3e;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #f2f2f2;
  border-radius: 0px;
  border: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #00677f;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #c5c5c5;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input"
        scale="standard"
      >
        My input
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="false"
          data-testid="my-input-text-field-input"
          id="my-input"
          name="my-input"
          scale="standard"
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input with variant baseLine 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3e3e3e;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px 0px 0 0;
  border-bottom: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border-bottom: 1px solid #00677f;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input"
        scale="standard"
      >
        My input
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="false"
          data-testid="my-input-text-field-input"
          id="my-input"
          name="my-input"
          scale="standard"
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component renders input without floating label 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0:has(input[readonly]:not([disabled]):focus) label {
  color: #00677f;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 8px;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #252525;
  cursor: inherit;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px;
  border: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #00677f;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #c5c5c5;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: #a9a9a9;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: #a9a9a9;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 20px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7::placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input"
        scale="standard"
      >
        My input
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="false"
          data-testid="my-input-text-field-input"
          id="my-input"
          name="my-input"
          scale="standard"
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with error styles and message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #e80000;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 12px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 12px;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px;
  border: 1px solid #e80000;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #e80000;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #e80000;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #e80000;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

.emotion-9 {
  padding-left: 12px;
}

.emotion-11 {
  font-family: Daimler CS;
  font-size: 12px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #e80000;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-with-error-message-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input-with-error-message"
        scale="standard"
      >
        My Input with Error Message
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-with-error-message-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="true"
          data-testid="my-input-with-error-message-text-field-input"
          id="my-input-with-error-message"
          name="my-input-with-error-message"
          scale="standard"
          type="text"
          value="Initial Value"
        />
      </div>
    </div>
    <div
      class="emotion-9 emotion-10"
    >
      <span
        class="emotion-11"
        color="error.default"
        data-testid="typography"
      >
        My Error Message
      </span>
    </div>
  </div>
</div>
`;

exports[`<TextField /> component should render the TextField with info message 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #a9a9a9;
}

.emotion-0:has(input[readonly]:not(input[disabled])) i,
.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #3e3e3e;
}

.emotion-0 false input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0;
}

.emotion-4 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3e3e3e;
  cursor: inherit;
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  left: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  color: #252525;
  background-color: #e6e6e6;
  border-radius: 0px;
  border: 1px solid #c5c5c5;
}

.emotion-5:focus-within,
.emotion-5:hover:not([disabled]) {
  border: 1px solid #00677f;
}

.emotion-5:hover:([disabled]) {
  border: 1px solid #c5c5c5;
}

.emotion-5:has(input[readonly]:not([disabled])) {
  background-color: #f2f2f2;
  border: 1px solid #e6e6e6;
}

.emotion-5:has(input[readonly]:not([disabled])):focus-within,
.emotion-5:has(input[readonly]:not([disabled])):hover {
  border: 1px solid #00677f;
}

.emotion-5:has(input[disabled]),
.emotion-5:has(input[disabled])>* {
  cursor: not-allowed;
}

.emotion-5:has(input[disabled]):hover,
.emotion-5:has(input[disabled])>*:hover {
  border-color: #c5c5c5;
}

.emotion-5:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-5:has(input[disabled]) input::placeholder,
.emotion-5:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-7 {
  font-family: Daimler CS;
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  color: #252525;
  padding: 28px 12px 12px;
}

.emotion-7:focus {
  outline: none;
}

.emotion-7:-moz-read-only {
  color: #3e3e3e;
}

.emotion-7:read-only {
  color: #3e3e3e;
}

.emotion-7 input:-webkit-autofill,
.emotion-7 input:-webkit-autofill:hover,
.emotion-7 input:-webkit-autofill:focus,
.emotion-7 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-7[readonly]::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus::-moz-placeholder {
  color: transparent;
}

.emotion-7[readonly]:focus:-ms-input-placeholder {
  color: transparent;
}

.emotion-7[readonly]::placeholder,
.emotion-7[readonly]:focus::placeholder {
  color: transparent;
}

.emotion-7::-webkit-input-placeholder {
  color: transparent;
}

.emotion-7::-moz-placeholder {
  color: transparent;
}

.emotion-7:-ms-input-placeholder {
  color: transparent;
}

.emotion-7::placeholder {
  color: transparent;
}

.emotion-7:focus::-webkit-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::-moz-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus:-ms-input-placeholder {
  color: #3e3e3e;
}

.emotion-7:focus::placeholder {
  color: #3e3e3e;
}

.emotion-7:disabled {
  color: #a9a9a9;
}

.emotion-9 {
  padding-left: 12px;
}

.emotion-11 {
  font-family: Daimler CS;
  font-size: 12px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 16px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3e3e3e;
}

<div>
  <div
    class="emotion-0 emotion-1"
    data-testid="my-input-with-info-message-text-field"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4"
        data-testid="label-field"
        for="my-input-with-info-message"
        scale="standard"
      >
        My Input with info message
      </label>
      <div
        class="emotion-5 emotion-6"
        data-testid="my-input-with-info-message-text-field-wrapper"
      >
        <input
          class="emotion-7 emotion-8"
          data-error="false"
          data-testid="my-input-with-info-message-text-field-input"
          id="my-input-with-info-message"
          name="my-input-with-info-message"
          scale="standard"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="emotion-9 emotion-10"
    >
      <span
        class="emotion-11"
        color="content.medium"
        data-testid="typography"
      >
        My Infor Message
      </span>
    </div>
  </div>
</div>
`;
