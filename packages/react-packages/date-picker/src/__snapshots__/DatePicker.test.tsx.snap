// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DatePicker /> component onBlur event should render error message when date is below min 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(-45%);
  -moz-transform: translateY(-45%);
  -ms-transform: translateY(-45%);
  transform: translateY(-45%);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #A00000;
}

.emotion-4:focus-within,
.emotion-4:hover {
  border: 1px solid #A00000;
}

.emotion-4:focus-within:has(input[readonly]:not([disabled])),
.emotion-4:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-4:focus-within:has(input[disabled]),
.emotion-4:hover:has(input[disabled]),
.emotion-4:focus-within:has(input[disabled])>*,
.emotion-4:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-4:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input::placeholder,
.emotion-4:hover:has(input[disabled]) input::placeholder,
.emotion-4:focus-within:has(input[disabled])>* input::placeholder,
.emotion-4:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-6 input:-webkit-autofill,
.emotion-6 input:-webkit-autofill:hover,
.emotion-6 input:-webkit-autofill:focus,
.emotion-6 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

.emotion-8 {
  padding-left: 16px;
}

.emotion-10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="Choose-a-date"
    >
      Choose a date
    </label>
    <div
      class="emotion-4 emotion-5"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="true"
        data-testid="input-field"
        id="Choose-a-date"
        min="2023-03-30"
        name="Choose-a-date"
        type="date"
        value="2023-02-01"
      />
    </div>
    <div
      class="emotion-8 emotion-9"
    >
      <span
        class="emotion-10 emotion-11"
        color="error.default"
        data-testid="typography"
      >
        Please enter a valid date
      </span>
    </div>
  </div>
</div>
`;

exports[`<DatePicker /> component onBlur event should render error message when date is higher than max 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(-45%);
  -moz-transform: translateY(-45%);
  -ms-transform: translateY(-45%);
  transform: translateY(-45%);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #A00000;
}

.emotion-4:focus-within,
.emotion-4:hover {
  border: 1px solid #A00000;
}

.emotion-4:focus-within:has(input[readonly]:not([disabled])),
.emotion-4:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-4:focus-within:has(input[disabled]),
.emotion-4:hover:has(input[disabled]),
.emotion-4:focus-within:has(input[disabled])>*,
.emotion-4:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-4:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-4:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-4:focus-within:has(input[disabled]) input::placeholder,
.emotion-4:hover:has(input[disabled]) input::placeholder,
.emotion-4:focus-within:has(input[disabled])>* input::placeholder,
.emotion-4:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-6 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-6 input:-webkit-autofill,
.emotion-6 input:-webkit-autofill:hover,
.emotion-6 input:-webkit-autofill:focus,
.emotion-6 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-6::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6::-moz-placeholder {
  color: transparent;
}

.emotion-6:-ms-input-placeholder {
  color: transparent;
}

.emotion-6::placeholder {
  color: transparent;
}

.emotion-8 {
  padding-left: 16px;
}

.emotion-10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="Choose-a-date"
    >
      Choose a date
    </label>
    <div
      class="emotion-4 emotion-5"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-6 emotion-7"
        data-error="true"
        data-testid="input-field"
        id="Choose-a-date"
        max="2025-03-30"
        name="Choose-a-date"
        type="date"
        value="2026-02-01"
      />
    </div>
    <div
      class="emotion-8 emotion-9"
    >
      <span
        class="emotion-10 emotion-11"
        color="error.default"
        data-testid="typography"
      >
        Please enter a valid date
      </span>
    </div>
  </div>
</div>
`;

exports[`<DatePicker /> component should render date input correctly 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-0 i {
  color: #838383;
}

.emotion-0:has(input[disabled]) i,
.emotion-0:has(input[disabled]) label>span {
  color: #A3A3A3;
}

.emotion-0:has(input[readonly]:not(input[disabled])) label,
.emotion-0:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-0 input[type="search"]::-webkit-search-decoration,
.emotion-0 input[type="search"]::-webkit-search-cancel-button,
.emotion-0 input[type="search"]::-webkit-search-results-button,
.emotion-0 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-2 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(-45%);
  -moz-transform: translateY(-45%);
  -ms-transform: translateY(-45%);
  transform: translateY(-45%);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-4 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #A00000;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #292929;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border: 1px solid #C1C1C1;
}

.emotion-6:focus-within,
.emotion-6:hover {
  border: 1px solid #131313;
}

.emotion-6:focus-within:has(input[readonly]:not([disabled])),
.emotion-6:hover:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:focus-within:has(input[disabled]),
.emotion-6:hover:has(input[disabled]),
.emotion-6:focus-within:has(input[disabled])>*,
.emotion-6:hover:has(input[disabled])>* {
  color: #A3A3A3;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:focus-within:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-6:hover:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:focus-within:has(input[disabled]) input::placeholder,
.emotion-6:hover:has(input[disabled]) input::placeholder,
.emotion-6:focus-within:has(input[disabled])>* input::placeholder,
.emotion-6:hover:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-8 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-8 input:-webkit-autofill,
.emotion-8 input:-webkit-autofill:hover,
.emotion-8 input:-webkit-autofill:focus,
.emotion-8 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-8::-webkit-input-placeholder {
  color: transparent;
}

.emotion-8::-moz-placeholder {
  color: transparent;
}

.emotion-8:-ms-input-placeholder {
  color: transparent;
}

.emotion-8::placeholder {
  color: transparent;
}

<div>
  <div
    class="emotion-0 emotion-1"
  >
    <label
      class="emotion-2 emotion-3"
      data-testid="label-field"
      for="Choose-a-date"
    >
      Choose a date
      <span
        class="emotion-4 emotion-5"
        color="error.default"
        data-testid="typography"
      >
        *
      </span>
    </label>
    <div
      class="emotion-6 emotion-7"
      data-testid="input-wrapper"
    >
      <input
        class="emotion-8 emotion-9"
        data-error="false"
        data-testid="input-field"
        id="Choose-a-date"
        max="2025-03-30"
        min="2023-03-30"
        name="Choose-a-date"
        type="date"
        value=""
      />
    </div>
  </div>
</div>
`;
