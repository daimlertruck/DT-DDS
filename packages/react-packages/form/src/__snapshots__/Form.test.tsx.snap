// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Form /> component renders simple form 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  row-gap: 24px;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-2 i {
  color: #838383;
}

.emotion-2:has(input[disabled]) i,
.emotion-2:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-2:has(input[readonly]:not(input[disabled])) label,
.emotion-2:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-2 input[type="search"]::-webkit-search-decoration,
.emotion-2 input[type="search"]::-webkit-search-cancel-button,
.emotion-2 input[type="search"]::-webkit-search-results-button,
.emotion-2 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-4 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #454545;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border-style: solid;
  border-width: 1px;
  border-color: #C1C1C1;
}

.emotion-6:has(input:focus) {
  border-color: #00677F;
}

.emotion-6:has(input[data-error="true"]) {
  border-color: #FF494A;
}

.emotion-6:has(input[data-error="true"]):focus {
  border-color: #FF494A;
}

.emotion-6:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-6:has(input[disabled]),
.emotion-6:has(input[disabled])>* {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-6:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-6:has(input[disabled]) input::placeholder,
.emotion-6:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-8 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-8 input:-webkit-autofill,
.emotion-8 input:-webkit-autofill:hover,
.emotion-8 input:-webkit-autofill:focus,
.emotion-8 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-8::-webkit-input-placeholder {
  color: transparent;
}

.emotion-8::-moz-placeholder {
  color: transparent;
}

.emotion-8:-ms-input-placeholder {
  color: transparent;
}

.emotion-8::placeholder {
  color: transparent;
}

<div>
  <form
    class="emotion-0 emotion-1"
    data-testid="test-form"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4 emotion-5"
        data-testid="label-field"
        for="label-1"
      >
        label 1
      </label>
      <div
        class="emotion-6 emotion-7"
      >
        <input
          class="emotion-8 emotion-9"
          data-error="false"
          data-testid="input-field"
          id="label-1"
          name="label-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="emotion-2 emotion-3"
    >
      <label
        class="emotion-4 emotion-5"
        data-testid="label-field"
        for="label-2"
      >
        label 2
      </label>
      <div
        class="emotion-6 emotion-7"
      >
        <input
          class="emotion-8 emotion-9"
          data-error="false"
          data-testid="input-field"
          id="label-2"
          name="label-2"
          type="text"
          value=""
        />
      </div>
    </div>
  </form>
</div>
`;

exports[`<Form /> component with Form.Group should render a disabled form group 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  row-gap: 24px;
}

.emotion-2 {
  row-gap: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  color: #454545;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  -webkit-box-pack: stretch;
  -ms-flex-pack: stretch;
  -webkit-justify-content: stretch;
  justify-content: stretch;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  opacity: 0.5;
  pointer-events: none;
}

@media only screen and (min-width: 768px) {
  .emotion-4 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-6 i {
  color: #838383;
}

.emotion-6:has(input[disabled]) i,
.emotion-6:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-6:has(input[readonly]:not(input[disabled])) label,
.emotion-6:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-6 input[type="search"]::-webkit-search-decoration,
.emotion-6 input[type="search"]::-webkit-search-cancel-button,
.emotion-6 input[type="search"]::-webkit-search-results-button,
.emotion-6 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-8 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #454545;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border-style: solid;
  border-width: 1px;
  border-color: #C1C1C1;
}

.emotion-10:has(input:focus) {
  border-color: #00677F;
}

.emotion-10:has(input[data-error="true"]) {
  border-color: #FF494A;
}

.emotion-10:has(input[data-error="true"]):focus {
  border-color: #FF494A;
}

.emotion-10:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-10:has(input[disabled]),
.emotion-10:has(input[disabled])>* {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-10:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input::placeholder,
.emotion-10:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-12 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-12 input:-webkit-autofill,
.emotion-12 input:-webkit-autofill:hover,
.emotion-12 input:-webkit-autofill:focus,
.emotion-12 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-12::-webkit-input-placeholder {
  color: transparent;
}

.emotion-12::-moz-placeholder {
  color: transparent;
}

.emotion-12:-ms-input-placeholder {
  color: transparent;
}

.emotion-12::placeholder {
  color: transparent;
}

<div>
  <form
    class="emotion-0 emotion-1"
    data-testid="test-form"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <div
        class="emotion-4 emotion-5"
        disabled=""
      >
        <div
          class="emotion-6 emotion-7"
        >
          <label
            class="emotion-8 emotion-9"
            data-testid="label-field"
            for="label-1"
          >
            label 1
          </label>
          <div
            class="emotion-10 emotion-11"
          >
            <input
              class="emotion-12 emotion-13"
              data-error="false"
              data-testid="input-field"
              id="label-1"
              name="label-1"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
`;

exports[`<Form /> component with Form.Group should render a form with display flex 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  row-gap: 24px;
}

.emotion-2 {
  row-gap: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  color: #454545;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  -webkit-box-pack: stretch;
  -ms-flex-pack: stretch;
  -webkit-justify-content: stretch;
  justify-content: stretch;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media only screen and (min-width: 768px) {
  .emotion-4 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-6 i {
  color: #838383;
}

.emotion-6:has(input[disabled]) i,
.emotion-6:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-6:has(input[readonly]:not(input[disabled])) label,
.emotion-6:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-6 input[type="search"]::-webkit-search-decoration,
.emotion-6 input[type="search"]::-webkit-search-cancel-button,
.emotion-6 input[type="search"]::-webkit-search-results-button,
.emotion-6 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-8 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #454545;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border-style: solid;
  border-width: 1px;
  border-color: #C1C1C1;
}

.emotion-10:has(input:focus) {
  border-color: #00677F;
}

.emotion-10:has(input[data-error="true"]) {
  border-color: #FF494A;
}

.emotion-10:has(input[data-error="true"]):focus {
  border-color: #FF494A;
}

.emotion-10:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-10:has(input[disabled]),
.emotion-10:has(input[disabled])>* {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-10:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-10:has(input[disabled]) input::placeholder,
.emotion-10:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-12 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-12 input:-webkit-autofill,
.emotion-12 input:-webkit-autofill:hover,
.emotion-12 input:-webkit-autofill:focus,
.emotion-12 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-12::-webkit-input-placeholder {
  color: transparent;
}

.emotion-12::-moz-placeholder {
  color: transparent;
}

.emotion-12:-ms-input-placeholder {
  color: transparent;
}

.emotion-12::placeholder {
  color: transparent;
}

<div>
  <form
    class="emotion-0 emotion-1"
    data-testid="test-form"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <div
        class="emotion-4 emotion-5"
      >
        <div
          class="emotion-6 emotion-7"
        >
          <label
            class="emotion-8 emotion-9"
            data-testid="label-field"
            for="label-1"
          >
            label 1
          </label>
          <div
            class="emotion-10 emotion-11"
          >
            <input
              class="emotion-12 emotion-13"
              data-error="false"
              data-testid="input-field"
              id="label-1"
              name="label-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="emotion-6 emotion-7"
        >
          <label
            class="emotion-8 emotion-9"
            data-testid="label-field"
            for="label-2"
          >
            label 2
          </label>
          <div
            class="emotion-10 emotion-11"
          >
            <input
              class="emotion-12 emotion-13"
              data-error="false"
              data-testid="input-field"
              id="label-2"
              name="label-2"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
`;

exports[`<Form /> component with Form.Group should render a form with group title 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  row-gap: 24px;
}

.emotion-2 {
  row-gap: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  color: #454545;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-column-gap: 10px;
  column-gap: 10px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.5rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #00677F;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 16px;
  -webkit-box-pack: stretch;
  -ms-flex-pack: stretch;
  -webkit-justify-content: stretch;
  justify-content: stretch;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media only screen and (min-width: 768px) {
  .emotion-8 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  position: relative;
}

.emotion-10 i {
  color: #838383;
}

.emotion-10:has(input[disabled]) i,
.emotion-10:has(input[disabled]) label>span {
  color: #C1C1C1;
}

.emotion-10:has(input[readonly]:not(input[disabled])) label,
.emotion-10:has(input[readonly]:not(input[disabled])) label>span {
  color: #838383;
}

.emotion-10 input[type="search"]::-webkit-search-decoration,
.emotion-10 input[type="search"]::-webkit-search-cancel-button,
.emotion-10 input[type="search"]::-webkit-search-results-button,
.emotion-10 input[type="search"]::-webkit-search-results-decoration {
  display: none;
}

.emotion-12 {
  font-weight: 700;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  color: #838383;
  cursor: inherit;
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  left: 12px;
  top: 16px;
  position: absolute;
  -webkit-transform: translateY(0);
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: -webkit-transform 150ms ease-out,font-size 150ms ease-out;
  transition: transform 150ms ease-out,font-size 150ms ease-out;
}

.emotion-14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 198px;
  width: 100%;
  height: 54px;
  color: #454545;
  gap: 8px;
  background-color: #F3F3F5;
  padding-inline: 12px;
  border-radius: 0px;
  border-style: solid;
  border-width: 1px;
  border-color: #C1C1C1;
}

.emotion-14:has(input:focus) {
  border-color: #00677F;
}

.emotion-14:has(input[data-error="true"]) {
  border-color: #FF494A;
}

.emotion-14:has(input[data-error="true"]):focus {
  border-color: #FF494A;
}

.emotion-14:has(input[readonly]:not([disabled])) {
  background-color: #F3F3F5;
  color: #838383;
}

.emotion-14:has(input[disabled]),
.emotion-14:has(input[disabled])>* {
  color: #C1C1C1;
  background-color: #FAFAFA;
  border-color: #DEDEDE;
  cursor: not-allowed;
}

.emotion-14:has(input[disabled]) input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled]) input::-moz-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled]) input:-ms-input-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled])>* input::-webkit-input-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled])>* input::-moz-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled])>* input:-ms-input-placeholder {
  color: transparent;
}

.emotion-14:has(input[disabled]) input::placeholder,
.emotion-14:has(input[disabled])>* input::placeholder {
  color: transparent;
}

.emotion-16 {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.25rem;
  letter-spacing: normal;
  margin: 0;
  text-transform: none;
  border: 0;
  outline: 0;
  width: 100%;
  background-color: inherit;
  padding: 24px 0 8px 0;
}

.emotion-16 input:-webkit-autofill,
.emotion-16 input:-webkit-autofill:hover,
.emotion-16 input:-webkit-autofill:focus,
.emotion-16 input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
}

.emotion-16::-webkit-input-placeholder {
  color: transparent;
}

.emotion-16::-moz-placeholder {
  color: transparent;
}

.emotion-16:-ms-input-placeholder {
  color: transparent;
}

.emotion-16::placeholder {
  color: transparent;
}

<div>
  <form
    class="emotion-0 emotion-1"
    data-testid="test-form"
  >
    <div
      class="emotion-2 emotion-3"
    >
      <div
        class="emotion-4 emotion-5"
      >
        <p
          class="emotion-6 emotion-7"
          color="primary.default"
          data-testid="typography"
          style="text-transform: uppercase;"
        >
          Group title
        </p>
      </div>
      <div
        class="emotion-8 emotion-9"
      >
        <div
          class="emotion-10 emotion-11"
        >
          <label
            class="emotion-12 emotion-13"
            data-testid="label-field"
            for="label-1"
          >
            label 1
          </label>
          <div
            class="emotion-14 emotion-15"
          >
            <input
              class="emotion-16 emotion-17"
              data-error="false"
              data-testid="input-field"
              id="label-1"
              name="label-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="emotion-10 emotion-11"
        >
          <label
            class="emotion-12 emotion-13"
            data-testid="label-field"
            for="label-2"
          >
            label 2
          </label>
          <div
            class="emotion-14 emotion-15"
          >
            <input
              class="emotion-16 emotion-17"
              data-error="false"
              data-testid="input-field"
              id="label-2"
              name="label-2"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
`;
