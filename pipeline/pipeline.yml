name: $(Build.DefinitionName)-$(Build.BuildId)

resources:
  repositories:
    - repository: templates
      type: GitHubEnterprise
      name: tblx/azure-pipeline-templates
      ref: v52
      endpoint: GitHubDTUI

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - pipeline/*
      - packages/dt-ui-react/*
      - apps/docs/*
    exclude:
      - \*

pr:
  branches:
    include:
      - "*"
  paths:
    include:
      - packages/dt-ui-react/*
      - apps/docs/*

variables:
  - name: GIT_FAKE_EMAIL
    value: dt-ui@daimlertruck.com
  - name: GIT_FAKE_USER
    value: dt-ui

stages:
  - stage: Prepare
    displayName: Prepare environment variables
    pool: DEVAgentPool
    jobs:
      - job: Environment
        displayName: Prepare Environment variables
        workspace:
          clean: all
        steps:
          - checkout: self
            clean: true
          - template: Utils/job-prepare-node.yml@templates
            parameters:
              commit-id: $(Build.SourceVersion)
          - script: |
              echo "##vso[build.updatebuildnumber]v$(setvars.VERSION)-b$(Build.BuildId)"
            displayName: "Overriding BuildNumber"
          - task: Bash@3
            displayName: Check fixups commits
            inputs:
              targetType: inline
              script: |
                fixups=$(git log --oneline origin/main..HEAD -- | grep -e "fixup! ")
                if [ -z "$fixups" ]; then
                  exit 0
                fi
                RED='\033[0;31m'
                NC='\033[0m' # No Color
                echo -e "${RED}$fixups${NC}"
                exit 1

  - stage: VersionAndTag
    displayName: Version and Tag DT-UI
    pool: DEVAgentPool
    dependsOn: ContinuousIntegration
    condition: and(contains(variables['build.sourceBranch'], 'refs/heads/main'), succeeded())
    jobs:
      - job: VersionAndTag
        displayName: Run changesets versioning and tagging
        steps:
          - template: templates/yarn-node-install.yml
          - script: |
              git config --global user.email $(GIT_FAKE_EMAIL)
              git config --global user.name ${GIT_FAKE_USER}
            displayName: "Setup fake credentials"
          - checkout: self
            persistCredentials: true

          - script: |
              yarn install
              yarn build
            displayName: "Run build for changeset plugin"
            workingDirectory: packages/changeset-conventional-commits

          - script: |
              git checkout $(Build.SourceBranchName)
              yarn changesets:ci
              git push origin $(Build.SourceBranchName)
              git push origin --tags
            displayName: "Bump affected packages version and tag"
